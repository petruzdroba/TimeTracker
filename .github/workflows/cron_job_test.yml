name: Cron Job Test

on:
  schedule:
    - cron: '0 3 * * *'  # 3AM UTC
  workflow_dispatch:

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare top-level file (no-op for job isolation)
        run: |
          echo "Workflow run at $(date '+%Y-%m-%d %H:%M:%S')" > init_marker.txt

  frontend-tests:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup frontend env
        env:
          apiUrl: ${{ secrets.apiUrl }}
        run: |
          # work inside techtreck-learning so test_summary.txt lives there
          cd techtreck-learning
          mkdir -p src/environments
          echo 'export const environment = { production: false, apiUrl: "'$apiUrl'" };' > src/environments/environment.ts

      - name: Install frontend deps
        run: |
          cd techtreck-learning
          npm ci
          npm install cypress --save-dev

      - name: Run frontend tests and append summary
        run: |
          cd techtreck-learning
          echo "=== FRONTEND TESTS === $(date '+%Y-%m-%d %H:%M:%S')" > test_summary.txt
          # append the summarized TOTAL line (strips ANSI color codes)
          npm run test:ci > test_output_full.txt 2>&1 || true

          grep TOTAL: test_output_full.txt | tail -n 1 | sed 's/\x1B\[[0-9;]*[mK]//g' >> test_summary.txt

          if grep -q "FAILED" test_output_full.txt; then
            echo "" >> test_summary.txt
            echo "FAILED TESTS:" >> test_summary.txt
            grep "FAILED$" test_output_full.txt | sed 's/^.*Chrome[^)]*) \(.*\) FAILED$/\1/' >> test_summary.txt
          fi

      - name: Upload frontend test summary
        uses: actions/upload-artifact@v4
        with:
          name: frontend-summary
          path: techtreck-learning/test_summary.txt

  backend-tests:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend deps
        run: |
          cd techtreck-learning/backend
          pip install -r requirements.txt

      - name: Run backend tests and append summary
        env:
          AZURE_DOMAIN: "https://dummy-azure-app.azurewebsites.net,https://dummy-frontend.netlify.app"
          DJANGO_ALLOWED_HOSTS: "dummy-frontend.netlify.app,localhost,dummy-azure-app.azurewebsites.net"
          DJANGO_CORS_ALLOWED_ORIGINS: "https://dummy-frontend.netlify.app"
          DJANGO_DEBUG: "False"
          DJANGO_SECRET_KEY: "dummysecretkey1234567890"
        run: |
          # create header in techtreck-learning folder and then run backend tests
          cd techtreck-learning
          echo "=== BACKEND TESTS === $(date '+%Y-%m-%d %H:%M:%S')" > test_summary.txt
          cd backend

          python manage.py test 2>&1 | tee test_output.log

          ran=$(grep -Eo 'Ran [0-9]+ tests' test_output.log | tail -n1 | grep -Eo '[0-9]+')
          fails=$(grep -Eo 'failures=[0-9]+' test_output.log | tail -n1 | cut -d= -f2)
          [ -z "$ran" ] && ran=0
          [ -z "$fails" ] && fails=0
          success=$((ran - fails))
          echo "TOTAL: $ran SUCCESS: $success FAILED: $fails" >> ../test_summary.txt

          if [ "$fails" -gt 0 ]; then
            echo "" >> ../test_summary.txt
            echo "FAILED TESTS:" >> ../test_summary.txt
            grep "^FAIL:" test_output.log | sed 's/^FAIL: \([^(]*\).*/\1/' >> ../test_summary.txt
          fi

      - name: Upload backend test summary
        uses: actions/upload-artifact@v4
        with:
          name: backend-summary
          path: techtreck-learning/test_summary.txt

  report:
    needs: [frontend-tests, backend-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download frontend summary artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-summary
          path: ./artifacts/frontend

      - name: Download backend summary artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-summary
          path: ./artifacts/backend

      - name: Merge summaries into techtreck-learning/test_summary.txt
        run: |
          mkdir -p techtreck-learning
          # Create a clean merged file
          echo "MERGED TEST SUMMARY - $(date '+%Y-%m-%d %H:%M:%S')" > techtreck-learning/test_summary.txt

          # If frontend artifact exists, append it (guard against missing files)
          if [ -f artifacts/frontend/test_summary.txt ]; then
            echo "--- frontend ---" >> techtreck-learning/test_summary.txt
            cat artifacts/frontend/test_summary.txt >> techtreck-learning/test_summary.txt
          else
            echo "No frontend summary found" >> techtreck-learning/test_summary.txt
          fi

          # If backend artifact exists, append it
          if [ -f artifacts/backend/test_summary.txt ]; then
            echo "" >> techtreck-learning/test_summary.txt
            echo "--- backend ---" >> techtreck-learning/test_summary.txt
            cat artifacts/backend/test_summary.txt >> techtreck-learning/test_summary.txt
          else
            echo "No backend summary found" >> techtreck-learning/test_summary.txt
          fi

          # show merged file for logs
          echo "---- merged content ----"
          cat techtreck-learning/test_summary.txt

      - name: Read test summary into output
        id: summary
        run: |
          echo "report<<EOF" >> $GITHUB_OUTPUT
          cat techtreck-learning/test_summary.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send report by email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "CI Test Report - ${{ github.repository }}"
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_USERNAME }}
          body: ${{ steps.summary.outputs.report }}
